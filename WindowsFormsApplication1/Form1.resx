<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vmiqQo4AAAAASUVORK5CYII=
</value>
  </data>
</root>